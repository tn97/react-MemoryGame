{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","cards","gameOver","_this","setState","console","log","this","forEach","card","count","find","o","i","sort","Math","random","_this2","components_Wrapper_Wrapper","components_Header_Header","map","components_Card_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"qvEAWeA,SARF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MAC1DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCCxBC,SAJC,SAAAZ,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCQnBC,SATA,SAAAd,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACUJ,EAAMe,MADhB,eACmCf,EAAMgB,qBCuD9BC,6MAtDbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,KAGbI,SAAW,WAUT,OATIC,EAAKH,MAAMH,MAAQM,EAAKH,MAAMF,WAChCK,EAAKC,SAAS,CAACN,UAAWK,EAAKH,MAAMH,OAAQ,WAC3CQ,QAAQC,IAAIC,KAAKP,MAAMF,aAG3BK,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEfP,EAAKC,SAAS,CAACP,MAAO,KACf,KAGTT,WAAa,SAAAC,GACXc,EAAKH,MAAMC,MAAMU,KAAK,SAACC,EAAEC,GACvB,GAAID,EAAEvB,KAAOA,EAAI,CACf,GAAuB,IAAnBY,EAAMY,GAAGH,MAMX,OALAT,EAAMY,GAAGH,MAAQT,EAAMY,GAAGH,MAAQ,EAClCP,EAAKC,SAAS,CAACP,MAAOM,EAAKH,MAAMH,MAAQ,GAAI,WAC3CQ,QAAQC,IAAIC,KAAKP,MAAMH,SAEzBM,EAAKH,MAAMC,MAAMa,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPb,EAAKD,uFAOJ,IAAAe,EAAAV,KACP,OACExB,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,CAAQtB,MAAOU,KAAKP,MAAMH,MAAOC,UAAWS,KAAKP,MAAMF,WAAvD,eACCS,KAAKP,MAAMC,MAAMmB,IAAI,SAAAX,GAAI,OACxB1B,EAAAC,EAAAC,cAACoC,EAAD,CACAjC,WAAY6B,EAAK7B,WACjBC,GAAIoB,EAAKpB,GACTiC,IAAKb,EAAKpB,GACVI,MAAOgB,EAAKhB,kBAhDJ8B,aCDlBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.39152bc6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => (\n  <div className=\"wrapper\">{props.children}</div>\n)\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Score: {props.score} highscore: {props.highscore}\n    </div>\n  </div>\n)\n\nexport default Header;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  // setting this.state.cards to the cards json array\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.cards.find((o,i) => {\n      if (o.id === id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({score: this.state.score + 1}, function() {\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n        {this.state.cards.map(card=> (\n          <Card\n          clickCount={this.clickCount}\n          id={card.id}\n          key={card.id}\n          image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}